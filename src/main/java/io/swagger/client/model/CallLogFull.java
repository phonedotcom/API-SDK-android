/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.CallDetails;
import io.swagger.client.model.ExtensionSummary;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * The Full Call Log Object includes the properties in the Call Log Summary Object, along with the following:
 **/
@ApiModel(description = "The Full Call Log Object includes the properties in the Call Log Summary Object, along with the following:")
public class CallLogFull {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("uuid")
  private String uuid = null;
  @SerializedName("extension")
  private ExtensionSummary extension = null;
  @SerializedName("caller_id")
  private String callerId = null;
  @SerializedName("called_number")
  private String calledNumber = null;
  @SerializedName("start_time")
  private String startTime = null;
  @SerializedName("created_at")
  private String createdAt = null;
  @SerializedName("direction")
  private String direction = null;
  @SerializedName("type")
  private String type = null;
  @SerializedName("call_duration")
  private Integer callDuration = null;
  @SerializedName("is_monitored")
  private String isMonitored = null;
  @SerializedName("call_number")
  private String callNumber = null;
  @SerializedName("final_action")
  private String finalAction = null;
  @SerializedName("call_recording")
  private String callRecording = null;
  @SerializedName("details")
  private List<CallDetails> details = null;
  @SerializedName("caller_cnam")
  private String callerCnam = null;

  /**
   * ID
   **/
  @ApiModelProperty(value = "ID")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Internal system id, may be null
   **/
  @ApiModelProperty(value = "Internal system id, may be null")
  public String getUuid() {
    return uuid;
  }
  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  /**
   * Account extension
   **/
  @ApiModelProperty(value = "Account extension")
  public ExtensionSummary getExtension() {
    return extension;
  }
  public void setExtension(ExtensionSummary extension) {
    this.extension = extension;
  }

  /**
   * Call made from this phone number
   **/
  @ApiModelProperty(value = "Call made from this phone number")
  public String getCallerId() {
    return callerId;
  }
  public void setCallerId(String callerId) {
    this.callerId = callerId;
  }

  /**
   * Call made to this phone number
   **/
  @ApiModelProperty(value = "Call made to this phone number")
  public String getCalledNumber() {
    return calledNumber;
  }
  public void setCalledNumber(String calledNumber) {
    this.calledNumber = calledNumber;
  }

  /**
   * Call start time
   **/
  @ApiModelProperty(value = "Call start time")
  public String getStartTime() {
    return startTime;
  }
  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  /**
   * Call log creation time. Same as call end time + time needed to create call log
   **/
  @ApiModelProperty(value = "Call log creation time. Same as call end time + time needed to create call log")
  public String getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * Call direction: in or out
   **/
  @ApiModelProperty(value = "Call direction: in or out")
  public String getDirection() {
    return direction;
  }
  public void setDirection(String direction) {
    this.direction = direction;
  }

  /**
   * Call type: call, fax, audiogram ...
   **/
  @ApiModelProperty(value = "Call type: call, fax, audiogram ...")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * Call duration in seconds
   **/
  @ApiModelProperty(value = "Call duration in seconds")
  public Integer getCallDuration() {
    return callDuration;
  }
  public void setCallDuration(Integer callDuration) {
    this.callDuration = callDuration;
  }

  /**
   * Was call being monitored?
   **/
  @ApiModelProperty(value = "Was call being monitored?")
  public String getIsMonitored() {
    return isMonitored;
  }
  public void setIsMonitored(String isMonitored) {
    this.isMonitored = isMonitored;
  }

  /**
   * Internal system call reference number
   **/
  @ApiModelProperty(value = "Internal system call reference number")
  public String getCallNumber() {
    return callNumber;
  }
  public void setCallNumber(String callNumber) {
    this.callNumber = callNumber;
  }

  /**
   * Last action of call flow
   **/
  @ApiModelProperty(value = "Last action of call flow")
  public String getFinalAction() {
    return finalAction;
  }
  public void setFinalAction(String finalAction) {
    this.finalAction = finalAction;
  }

  /**
   * URL of call recording if available. Empty string if call recording does not exist
   **/
  @ApiModelProperty(value = "URL of call recording if available. Empty string if call recording does not exist")
  public String getCallRecording() {
    return callRecording;
  }
  public void setCallRecording(String callRecording) {
    this.callRecording = callRecording;
  }

  /**
   * A list of call flows from beginning of call to end of call.
   **/
  @ApiModelProperty(value = "A list of call flows from beginning of call to end of call.")
  public List<CallDetails> getDetails() {
    return details;
  }
  public void setDetails(List<CallDetails> details) {
    this.details = details;
  }

  /**
   * Internal system caller id / name
   **/
  @ApiModelProperty(value = "Internal system caller id / name")
  public String getCallerCnam() {
    return callerCnam;
  }
  public void setCallerCnam(String callerCnam) {
    this.callerCnam = callerCnam;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallLogFull callLogFull = (CallLogFull) o;
    return (this.id == null ? callLogFull.id == null : this.id.equals(callLogFull.id)) &&
        (this.uuid == null ? callLogFull.uuid == null : this.uuid.equals(callLogFull.uuid)) &&
        (this.extension == null ? callLogFull.extension == null : this.extension.equals(callLogFull.extension)) &&
        (this.callerId == null ? callLogFull.callerId == null : this.callerId.equals(callLogFull.callerId)) &&
        (this.calledNumber == null ? callLogFull.calledNumber == null : this.calledNumber.equals(callLogFull.calledNumber)) &&
        (this.startTime == null ? callLogFull.startTime == null : this.startTime.equals(callLogFull.startTime)) &&
        (this.createdAt == null ? callLogFull.createdAt == null : this.createdAt.equals(callLogFull.createdAt)) &&
        (this.direction == null ? callLogFull.direction == null : this.direction.equals(callLogFull.direction)) &&
        (this.type == null ? callLogFull.type == null : this.type.equals(callLogFull.type)) &&
        (this.callDuration == null ? callLogFull.callDuration == null : this.callDuration.equals(callLogFull.callDuration)) &&
        (this.isMonitored == null ? callLogFull.isMonitored == null : this.isMonitored.equals(callLogFull.isMonitored)) &&
        (this.callNumber == null ? callLogFull.callNumber == null : this.callNumber.equals(callLogFull.callNumber)) &&
        (this.finalAction == null ? callLogFull.finalAction == null : this.finalAction.equals(callLogFull.finalAction)) &&
        (this.callRecording == null ? callLogFull.callRecording == null : this.callRecording.equals(callLogFull.callRecording)) &&
        (this.details == null ? callLogFull.details == null : this.details.equals(callLogFull.details)) &&
        (this.callerCnam == null ? callLogFull.callerCnam == null : this.callerCnam.equals(callLogFull.callerCnam));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.uuid == null ? 0: this.uuid.hashCode());
    result = 31 * result + (this.extension == null ? 0: this.extension.hashCode());
    result = 31 * result + (this.callerId == null ? 0: this.callerId.hashCode());
    result = 31 * result + (this.calledNumber == null ? 0: this.calledNumber.hashCode());
    result = 31 * result + (this.startTime == null ? 0: this.startTime.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.direction == null ? 0: this.direction.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.callDuration == null ? 0: this.callDuration.hashCode());
    result = 31 * result + (this.isMonitored == null ? 0: this.isMonitored.hashCode());
    result = 31 * result + (this.callNumber == null ? 0: this.callNumber.hashCode());
    result = 31 * result + (this.finalAction == null ? 0: this.finalAction.hashCode());
    result = 31 * result + (this.callRecording == null ? 0: this.callRecording.hashCode());
    result = 31 * result + (this.details == null ? 0: this.details.hashCode());
    result = 31 * result + (this.callerCnam == null ? 0: this.callerCnam.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallLogFull {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  uuid: ").append(uuid).append("\n");
    sb.append("  extension: ").append(extension).append("\n");
    sb.append("  callerId: ").append(callerId).append("\n");
    sb.append("  calledNumber: ").append(calledNumber).append("\n");
    sb.append("  startTime: ").append(startTime).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  direction: ").append(direction).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  callDuration: ").append(callDuration).append("\n");
    sb.append("  isMonitored: ").append(isMonitored).append("\n");
    sb.append("  callNumber: ").append(callNumber).append("\n");
    sb.append("  finalAction: ").append(finalAction).append("\n");
    sb.append("  callRecording: ").append(callRecording).append("\n");
    sb.append("  details: ").append(details).append("\n");
    sb.append("  callerCnam: ").append(callerCnam).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
