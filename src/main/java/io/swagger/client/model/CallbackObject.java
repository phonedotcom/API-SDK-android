/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CallbackObject {
  
  @SerializedName("url")
  private String url = null;
  @SerializedName("role")
  private String role = null;
  @SerializedName("verb")
  private String verb = null;
  @SerializedName("username")
  private String username = null;
  @SerializedName("password")
  private String password = null;
  @SerializedName("timeout")
  private Integer timeout = null;

  /**
   * URL of webhook, where the event is emitted to. Note: The listener supports both HTTP & HTTPS, we highly recommend that users use HTTPS on all callbacks (with user name and password) to ensure no one may send malicious events pretending to be Phone.com.
   **/
  @ApiModelProperty(value = "URL of webhook, where the event is emitted to. Note: The listener supports both HTTP & HTTPS, we highly recommend that users use HTTPS on all callbacks (with user name and password) to ensure no one may send malicious events pretending to be Phone.com.")
  public String getUrl() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }

  /**
   * Role of callback: main or backup
   **/
  @ApiModelProperty(value = "Role of callback: main or backup")
  public String getRole() {
    return role;
  }
  public void setRole(String role) {
    this.role = role;
  }

  /**
   * HTTP method: get or post
   **/
  @ApiModelProperty(value = "HTTP method: get or post")
  public String getVerb() {
    return verb;
  }
  public void setVerb(String verb) {
    this.verb = verb;
  }

  /**
   * Optional user name needed to logon to the webhook URL
   **/
  @ApiModelProperty(value = "Optional user name needed to logon to the webhook URL")
  public String getUsername() {
    return username;
  }
  public void setUsername(String username) {
    this.username = username;
  }

  /**
   * Optional password needed to logon to the webhook URL
   **/
  @ApiModelProperty(value = "Optional password needed to logon to the webhook URL")
  public String getPassword() {
    return password;
  }
  public void setPassword(String password) {
    this.password = password;
  }

  /**
   * Optional : Duration of HTTP response will time out while sending the event to the callback URL. (1 - 10 seconds)
   **/
  @ApiModelProperty(value = "Optional : Duration of HTTP response will time out while sending the event to the callback URL. (1 - 10 seconds)")
  public Integer getTimeout() {
    return timeout;
  }
  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallbackObject callbackObject = (CallbackObject) o;
    return (this.url == null ? callbackObject.url == null : this.url.equals(callbackObject.url)) &&
        (this.role == null ? callbackObject.role == null : this.role.equals(callbackObject.role)) &&
        (this.verb == null ? callbackObject.verb == null : this.verb.equals(callbackObject.verb)) &&
        (this.username == null ? callbackObject.username == null : this.username.equals(callbackObject.username)) &&
        (this.password == null ? callbackObject.password == null : this.password.equals(callbackObject.password)) &&
        (this.timeout == null ? callbackObject.timeout == null : this.timeout.equals(callbackObject.timeout));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.url == null ? 0: this.url.hashCode());
    result = 31 * result + (this.role == null ? 0: this.role.hashCode());
    result = 31 * result + (this.verb == null ? 0: this.verb.hashCode());
    result = 31 * result + (this.username == null ? 0: this.username.hashCode());
    result = 31 * result + (this.password == null ? 0: this.password.hashCode());
    result = 31 * result + (this.timeout == null ? 0: this.timeout.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallbackObject {\n");
    
    sb.append("  url: ").append(url).append("\n");
    sb.append("  role: ").append(role).append("\n");
    sb.append("  verb: ").append(verb).append("\n");
    sb.append("  username: ").append(username).append("\n");
    sb.append("  password: ").append(password).append("\n");
    sb.append("  timeout: ").append(timeout).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
