/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.CallbackObject;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CreateListenerParams {
  
  @SerializedName("type")
  private String type = null;
  @SerializedName("event_type")
  private String eventType = null;
  @SerializedName("callbacks")
  private List<CallbackObject> callbacks = null;

  /**
   * Type of listener. Must be 'callback'
   **/
  @ApiModelProperty(value = "Type of listener. Must be 'callback'")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * Type of event to subscribe. 'call.new', 'call.update', 'call.complete'
   **/
  @ApiModelProperty(value = "Type of event to subscribe. 'call.new', 'call.update', 'call.complete'")
  public String getEventType() {
    return eventType;
  }
  public void setEventType(String eventType) {
    this.eventType = eventType;
  }

  /**
   * Array of Callback Objects.
   **/
  @ApiModelProperty(value = "Array of Callback Objects.")
  public List<CallbackObject> getCallbacks() {
    return callbacks;
  }
  public void setCallbacks(List<CallbackObject> callbacks) {
    this.callbacks = callbacks;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateListenerParams createListenerParams = (CreateListenerParams) o;
    return (this.type == null ? createListenerParams.type == null : this.type.equals(createListenerParams.type)) &&
        (this.eventType == null ? createListenerParams.eventType == null : this.eventType.equals(createListenerParams.eventType)) &&
        (this.callbacks == null ? createListenerParams.callbacks == null : this.callbacks.equals(createListenerParams.callbacks));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.eventType == null ? 0: this.eventType.hashCode());
    result = 31 * result + (this.callbacks == null ? 0: this.callbacks.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateListenerParams {\n");
    
    sb.append("  type: ").append(type).append("\n");
    sb.append("  eventType: ").append(eventType).append("\n");
    sb.append("  callbacks: ").append(callbacks).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
