/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.ExtensionSummary;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Line {
  
  @SerializedName("line")
  private Integer line = null;
  @SerializedName("extension")
  private ExtensionSummary extension = null;

  /**
   * Line number
   **/
  @ApiModelProperty(value = "Line number")
  public Integer getLine() {
    return line;
  }
  public void setLine(Integer line) {
    this.line = line;
  }

  /**
   * Extensions object that this line number is mapped to.
   **/
  @ApiModelProperty(value = "Extensions object that this line number is mapped to.")
  public ExtensionSummary getExtension() {
    return extension;
  }
  public void setExtension(ExtensionSummary extension) {
    this.extension = extension;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Line line = (Line) o;
    return (this.line == null ? line.line == null : this.line.equals(line.line)) &&
        (this.extension == null ? line.extension == null : this.extension.equals(line.extension));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.line == null ? 0: this.line.hashCode());
    result = 31 * result + (this.extension == null ? 0: this.extension.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Line {\n");
    
    sb.append("  line: ").append(line).append("\n");
    sb.append("  extension: ").append(extension).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
