/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.CallNotifications;
import io.swagger.client.model.CallerIdPhoneNumber;
import io.swagger.client.model.SmsForwardingParams;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ReplacePhoneNumberParams {
  
  @SerializedName("route")
  private Object route = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("block_incoming")
  private Boolean blockIncoming = null;
  @SerializedName("block_anonymous")
  private Boolean blockAnonymous = null;
  @SerializedName("caller_id")
  private CallerIdPhoneNumber callerId = null;
  @SerializedName("sms_forwarding")
  private SmsForwardingParams smsForwarding = null;
  @SerializedName("pool_item")
  private Object poolItem = null;
  @SerializedName("call_notifications")
  private CallNotifications callNotifications = null;

  /**
   * Route lookup object
   **/
  @ApiModelProperty(value = "Route lookup object")
  public Object getRoute() {
    return route;
  }
  public void setRoute(Object route) {
    this.route = route;
  }

  /**
   * Phone Name
   **/
  @ApiModelProperty(value = "Phone Name")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Block incoming calls
   **/
  @ApiModelProperty(value = "Block incoming calls")
  public Boolean getBlockIncoming() {
    return blockIncoming;
  }
  public void setBlockIncoming(Boolean blockIncoming) {
    this.blockIncoming = blockIncoming;
  }

  /**
   * Block anonymous calls
   **/
  @ApiModelProperty(value = "Block anonymous calls")
  public Boolean getBlockAnonymous() {
    return blockAnonymous;
  }
  public void setBlockAnonymous(Boolean blockAnonymous) {
    this.blockAnonymous = blockAnonymous;
  }

  /**
   * Caller ID object
   **/
  @ApiModelProperty(value = "Caller ID object")
  public CallerIdPhoneNumber getCallerId() {
    return callerId;
  }
  public void setCallerId(CallerIdPhoneNumber callerId) {
    this.callerId = callerId;
  }

  /**
   * SMS Forwarding Object, or NULL
   **/
  @ApiModelProperty(value = "SMS Forwarding Object, or NULL")
  public SmsForwardingParams getSmsForwarding() {
    return smsForwarding;
  }
  public void setSmsForwarding(SmsForwardingParams smsForwarding) {
    this.smsForwarding = smsForwarding;
  }

  /**
   * Pool lookup object
   **/
  @ApiModelProperty(value = "Pool lookup object")
  public Object getPoolItem() {
    return poolItem;
  }
  public void setPoolItem(Object poolItem) {
    this.poolItem = poolItem;
  }

  /**
   * Call Notifications object
   **/
  @ApiModelProperty(value = "Call Notifications object")
  public CallNotifications getCallNotifications() {
    return callNotifications;
  }
  public void setCallNotifications(CallNotifications callNotifications) {
    this.callNotifications = callNotifications;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReplacePhoneNumberParams replacePhoneNumberParams = (ReplacePhoneNumberParams) o;
    return (this.route == null ? replacePhoneNumberParams.route == null : this.route.equals(replacePhoneNumberParams.route)) &&
        (this.name == null ? replacePhoneNumberParams.name == null : this.name.equals(replacePhoneNumberParams.name)) &&
        (this.blockIncoming == null ? replacePhoneNumberParams.blockIncoming == null : this.blockIncoming.equals(replacePhoneNumberParams.blockIncoming)) &&
        (this.blockAnonymous == null ? replacePhoneNumberParams.blockAnonymous == null : this.blockAnonymous.equals(replacePhoneNumberParams.blockAnonymous)) &&
        (this.callerId == null ? replacePhoneNumberParams.callerId == null : this.callerId.equals(replacePhoneNumberParams.callerId)) &&
        (this.smsForwarding == null ? replacePhoneNumberParams.smsForwarding == null : this.smsForwarding.equals(replacePhoneNumberParams.smsForwarding)) &&
        (this.poolItem == null ? replacePhoneNumberParams.poolItem == null : this.poolItem.equals(replacePhoneNumberParams.poolItem)) &&
        (this.callNotifications == null ? replacePhoneNumberParams.callNotifications == null : this.callNotifications.equals(replacePhoneNumberParams.callNotifications));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.route == null ? 0: this.route.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.blockIncoming == null ? 0: this.blockIncoming.hashCode());
    result = 31 * result + (this.blockAnonymous == null ? 0: this.blockAnonymous.hashCode());
    result = 31 * result + (this.callerId == null ? 0: this.callerId.hashCode());
    result = 31 * result + (this.smsForwarding == null ? 0: this.smsForwarding.hashCode());
    result = 31 * result + (this.poolItem == null ? 0: this.poolItem.hashCode());
    result = 31 * result + (this.callNotifications == null ? 0: this.callNotifications.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReplacePhoneNumberParams {\n");
    
    sb.append("  route: ").append(route).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  blockIncoming: ").append(blockIncoming).append("\n");
    sb.append("  blockAnonymous: ").append(blockAnonymous).append("\n");
    sb.append("  callerId: ").append(callerId).append("\n");
    sb.append("  smsForwarding: ").append(smsForwarding).append("\n");
    sb.append("  poolItem: ").append(poolItem).append("\n");
    sb.append("  callNotifications: ").append(callNotifications).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
